<div class="page-width">
  <header class="section-header text-center">
    <h1>{{ page_title }}</h1>
  </header>

  {% liquid
    case section.settings.grid
      when 2
        assign grid_item_width = 'medium-up--one-half'
      when 3
        assign grid_item_width = 'small--one-half medium-up--one-third'
      when 4
        assign grid_item_width = 'small--one-half medium-up--one-quarter'
      when 5
        assign grid_item_width = 'small--one-half medium-up--one-fifth'
    endcase
  %}

  <ul class="grid grid--uniform">
    {% if section.settings.display_type == 'all' %}
      {% liquid
        case section.settings.sort
          when 'products_high' or 'products_low'
            assign collections = collections | sort: 'all_products_count'
          when 'date' or 'date_reversed'
            assign collections = collections | sort: 'published_at'
        endcase
      %}
      {% if section.settings.sort == 'products_low' or section.settings.sort == 'date' or section.settings.sort == 'alphabetical' %}
        {% for collection in collections %}
          <li class="grid__item {{ grid_item_width }}">
            {% render 'collection-grid-item', collection: collection %}
          </li>
        {% endfor %}
      {% else %}
        {% for collection in collections reversed %}
          <li class="grid__item {{ grid_item_width }}">
            {% render 'collection-grid-item', collection: collection %}
          </li>
        {% endfor %}
      {% endif %}
    {% else %}
      {% for block in section.blocks %}
        <li class="grid__item {{ grid_item_width }}">
          {%- assign collection = collections[block.settings.collection] -%}
          {% render 'collection-grid-item', collection: collection %}
        </li>
      {% endfor %}
    {% endif %}
  </ul>
</div>



{% schema %}
{
  "name": "t:sections.list-collections-template.name",
  "settings": [
    {
      "type": "paragraph",
      "content": "t:sections.list-collections-template.settings.paragraph__1.content"
    },
    {
      "type": "radio",
      "id": "display_type",
      "label": "t:sections.list-collections-template.settings.display_type.label",
      "default": "all",
      "options": [
        {
          "value": "all",
          "label": "t:sections.list-collections-template.settings.display_type.options__1.label"
        },
        {
          "value": "selected",
          "label": "t:sections.list-collections-template.settings.display_type.options__2.label"
        }
      ]
    },
    {
      "type": "select",
      "id": "sort",
      "label": "t:sections.list-collections-template.settings.sort.label",
      "info": "t:sections.list-collections-template.settings.sort.info",
      "default": "alphabetical",
      "options": [
        {
          "value": "products_high",
          "label": "t:sections.list-collections-template.settings.sort.options__1.label"
        },
        {
          "value": "products_low",
          "label": "t:sections.list-collections-template.settings.sort.options__2.label"
        },
        {
          "value": "alphabetical",
          "label": "t:sections.list-collections-template.settings.sort.options__3.label"
        },
        {
          "value": "alphabetical_reversed",
          "label": "t:sections.list-collections-template.settings.sort.options__4.label"
        },
        {
          "value": "date",
          "label": "t:sections.list-collections-template.settings.sort.options__5.label"
        },
        {
          "value": "date_reversed",
          "label": "t:sections.list-collections-template.settings.sort.options__6.label"
        }
      ]
    },
    {
      "type": "range",
      "id": "grid",
      "label": "t:sections.list-collections-template.settings.grid.label",
      "default": 3,
      "min": 2,
      "max": 5,
      "step": 1
    }
  ],
  "blocks": [
    {
      "type": "collection",
      "name": "t:sections.list-collections-template.blocks.collection.name",
      "settings": [
        {
          "label": "t:sections.list-collections-template.blocks.collection.settings.collection.label",
          "id": "collection",
          "type": "collection"
        }
      ]
    }
  ]
}
{% endschema %}
