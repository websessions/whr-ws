{% assign render_landing_moment = true %}

{%- if request.params.hide_landing == 'true' -%}
  {% assign render_landing_moment = false %}
{%- endif -%}

{% if render_landing_moment %}
  <div id="landingMoment" class="landingMoment">
    <video
      loop
      muted
      playsInline
      preload="auto"
      autoPlay
      class="fullVid"
    >
      <source
        src="https://player.vimeo.com/external/922777324.m3u8?s=a6d9a6cd8ecd9e1dc14783f27a137075b0ab5fd1&logging=false"
        type="application/x-mpegURL"
      >
      <source
        src="https://player.vimeo.com/progressive_redirect/playback/922777324/rendition/720p/file.mp4?loc=external&log_user=0&signature=75667c97c873847c0442798c67a2144958048c2fda317a17234089a667853032"
        type="video/mp4"
      >
    </video>

    <video
      loop
      muted
      playsInline
      preload="auto"
      autoPlay
      class="fullVidMobile"
    >
      <source
        src="https://player.vimeo.com/external/922777460.m3u8?s=81086ce09476ed76465dd7c3077a20ac1ca188a5&logging=false"
        type="application/x-mpegURL"
      >
      <source
        src="https://player.vimeo.com/progressive_redirect/playback/922777460/rendition/540p/file.mp4?loc=external&log_user=0&signature=2f250a4e68f491cc2846c81a35e704586e5787f516cc78d8a983fbc08eb78a8a"
        type="video/mp4"
      >
    </video>

    <span>
      <p class="white">WHR Spring 2024</p>
      <p class="countdown-timer" style="color: white;"></p>
    </span>

    {%- assign formId = 'ContactFooter' -%}
    {% form 'customer', id: formId, novalidate: 'novalidate' %}
      {% if form.posted_successfully? %}
        <p class="form-message form-message--success" tabindex="-1" data-form-status>
          {% comment %} {{ 'general.newsletter_form.confirmation' | t }} {% endcomment %}
          Thanks! We'll keep you posted
        </p>
      {% elsif customer.name == 'anonymous' %}
        <span id="{{ formId }}-email-error" class="input-error-message">
          <span class="visually-hidden">{{ 'general.accessibility.error' | t }} </span>
          {% render 'icon-error' %}
          <span class="site-footer__newsletter-error">
            {{- form.errors.translated_fields.email | capitalize }}
            {{ form.errors.messages.email }}.</span
          >
        </span>
      {% else %}
        <input type="hidden" name="contact[tags]" value="newsletter">
        <div class="input-group {% if form.errors %} input-group--error{% endif %}">
          <input
            type="email"
            name="contact[email]"
            id="{{ formId }}-email"
            class="input-group__field newsletter__input{% if form.errors %} input--error{% endif %}"
            value="{{ form.email }}"
            placeholder="EMAIL"
            aria-label="{{ 'general.newsletter_form.email_placeholder' | t }}"
            aria-required="true"
            required
            autocorrect="off"
            autocapitalize="off"
            {% if form.errors %}
              aria-invalid="true"
              aria-describedby="{{ formId }}-email-error"
              data-form-status
            {% endif %}
            onfocus="showSubmitButton()"
            onblur="hideSubmitButton()"
          >
          <span class="input-group__btn" style="display: none;">
            <button type="submit" class="btn newsletter__submit" name="commit">
              <span class="newsletter__submit-text--large">{{ 'general.newsletter_form.submit' | t }}</span>
            </button>
          </span>
        </div>
      {% endif %}
    {%- endform -%}

    <p class="btn btn--has-icon-after" id="enterSiteButton">
      {{- 'enter site' -}}
    </p>
  </div>
{% endif %}

{% schema %}
{
  "name": "t:sections.404.name"
}
{% endschema %}

<script>
  function showSubmitButton() {
    var submitButton = document.querySelector('.input-group__btn');
    submitButton.style.display = 'inline-block';
  }

  function hideSubmitButton() {
    var emailInput = document.getElementById('{{ formId }}-email');
    if (emailInput.value === '') {
      var submitButton = document.querySelector('.input-group__btn');
      submitButton.style.display = 'none';
    }
  }
</script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    {% comment %} const countdown = function () {
      const countDownDate = new Date('Feb 9, 2024 09:00:00 PST').getTime();
      const x = setInterval(function () {
        const now = new Date().getTime();
        const distance = countDownDate - now;
        const days = Math.floor(distance / (1000 * 60 * 60 * 24));
        const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((distance % (1000 * 60)) / 1000);
        document.querySelector('.countdown-timer').innerHTML =
          days + 'D ' + hours + 'H ' + minutes + 'M ' + seconds + 'S ';
        if (distance < 0) {
          clearInterval(x);
          document.querySelector('.countdown-timer').innerHTML = 'EXPIRED';
        }
      }, 1000);
    };
    countdown(); {% endcomment %}
    // Function to hide the landing moment and save the choice in localStorage
    function hideLandingMoment() {
      const landingMoment = document.getElementById('landingMoment');
      if (landingMoment) {
        landingMoment.style.display = 'none';
        localStorage.setItem('landingMomentHidden', 'true');
      }
    }

    {% comment %} if (localStorage.getItem('landingMomentHidden') === 'true') {
      hideLandingMoment();
    } {% endcomment %}

    // Add click event listener to the "enter site" button
    const enterSiteButton = document.getElementById('enterSiteButton');
    if (enterSiteButton) {
      enterSiteButton.addEventListener('click', function (event) {
        event.preventDefault(); // Prevent the default anchor behavior
        hideLandingMoment();
        // No redirection is performed here
      });
    }
  });
</script>
